@inject _03_DragAndDropService DragService

<div class="component" draggable="true" 
     @onpointerdown=OnMouseDown
     @ondragstart="OnDragStart" 
     style=@("transform:" + GetStyle("translate") + "position:absolute;" + GetStyle("width") + GetStyle("height") + GetStyle("border"))>
</div>

@code {
    [CascadingParameter] _03_Band Band { get; set; }

    [Parameter] public _03_ComponentModel ComponentModel { get; set; } = new _03_ComponentModel();

    void OnDragStart(DragEventArgs e)
    {
        Band.ClearComponentFocus();
        DragService.StartDrag(ComponentModel.Uid, (int)e.ClientX, (int)e.ClientY);
    }
    void OnMouseDown(PointerEventArgs e)
    {
        if (e.CtrlKey == false)
            Band.ClearComponentFocus();
        Band.IsComponentMouseDown = true;
        ComponentModel.Focused = true;
    }
    public string GetStyle(string type)
    {
        switch (type.ToLower())
        {
            case "translate":
                return "translate(" + ComponentModel.X + "px, " + ComponentModel.Y + "px);";
            case "width":
                return "width:" + ComponentModel.Width + "px;";
            case "height":
                return "height:" + ComponentModel.Height + "px;";
            case "border":
                if (ComponentModel.Focused)
                    return "border: 1px solid blue;";
                else
                    return string.Empty;
            default:
                return string.Empty;
        }
    }
}